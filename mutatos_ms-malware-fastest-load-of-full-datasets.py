import numpy as np, pandas as pd 
import gc, os
from datetime import datetime


TrainRawPath = "../input/train.csv"
TestRawPath = "../input/test.csv"

def LoadTrainRaw(inputPath=TrainRawPath, verbose=False):    
    
    if (verbose==True):
        starttime = datetime.now()
        print(starttime)
    
    # save memory
    TrainRawColumnNames = ['MachineIdentifier', 'ProductName', 'EngineVersion', 'AppVersion', 'AvSigVersion', 'IsBeta', 'RtpStateBitfield', 'IsSxsPassiveMode', 'DefaultBrowsersIdentifier', 'AVProductStatesIdentifier', 'AVProductsInstalled', 'AVProductsEnabled', 'HasTpm', 'CountryIdentifier', 'CityIdentifier', 'OrganizationIdentifier', 'GeoNameIdentifier', 'LocaleEnglishNameIdentifier', 'Platform', 'Processor', 'OsVer', 'OsBuild', 'OsSuite', 'OsPlatformSubRelease', 'OsBuildLab', 'SkuEdition', 'IsProtected', 'AutoSampleOptIn', 'PuaMode', 'SMode', 'IeVerIdentifier', 'SmartScreen', 'Firewall', 'UacLuaenable', 'Census_MDC2FormFactor', 'Census_DeviceFamily', 'Census_OEMNameIdentifier', 'Census_OEMModelIdentifier', 'Census_ProcessorCoreCount', 'Census_ProcessorManufacturerIdentifier', 'Census_ProcessorModelIdentifier', 'Census_ProcessorClass', 'Census_PrimaryDiskTotalCapacity', 'Census_PrimaryDiskTypeName', 'Census_SystemVolumeTotalCapacity', 'Census_HasOpticalDiskDrive', 'Census_TotalPhysicalRAM', 'Census_ChassisTypeName', 'Census_InternalPrimaryDiagonalDisplaySizeInInches', 'Census_InternalPrimaryDisplayResolutionHorizontal', 'Census_InternalPrimaryDisplayResolutionVertical', 'Census_PowerPlatformRoleName', 'Census_InternalBatteryType', 'Census_InternalBatteryNumberOfCharges', 'Census_OSVersion', 'Census_OSArchitecture', 'Census_OSBranch', 'Census_OSBuildNumber', 'Census_OSBuildRevision', 'Census_OSEdition', 'Census_OSSkuName', 'Census_OSInstallTypeName', 'Census_OSInstallLanguageIdentifier', 'Census_OSUILocaleIdentifier', 'Census_OSWUAutoUpdateOptionsName', 'Census_IsPortableOperatingSystem', 'Census_GenuineStateName', 'Census_ActivationChannel', 'Census_IsFlightingInternal', 'Census_IsFlightsDisabled', 'Census_FlightRing', 'Census_ThresholdOptIn', 'Census_FirmwareManufacturerIdentifier', 'Census_FirmwareVersionIdentifier', 'Census_IsSecureBootEnabled', 'Census_IsWIMBootEnabled', 'Census_IsVirtualDevice', 'Census_IsTouchEnabled', 'Census_IsPenCapable', 'Census_IsAlwaysOnAlwaysConnectedCapable', 'Wdft_IsGamer', 'Wdft_RegionIdentifier', 'HasDetections']
    TrainRawColumnTypes = ['U', 'category', 'category', 'category', 'category', 'int8','float16','float32','float16','float16','float16','float16','int8','int16','float32','float16','float16','int16','category','category','category','int16','int16','category','category','category','float16','int8','category','float16','float16','category','float16','float32','category','category','float16','float32','float16','float16','float16','category','float32','category','float32','int8','float32','category','float16','float16','float16','category','category','float32','category','category','category','int16','int32','category','category','category','float16','int16','category','int8','category','category','float16','float16','category','float16','float16','float32','int8','float16','float16','int8','int8','float16','float16','float16','int8']

    
    output = pd.read_csv(inputPath, header=0, dtype=dict(zip(TrainRawColumnNames, TrainRawColumnTypes)))
    
    if (verbose==True):
        endtime = datetime.now()
        print(starttime)
        print(endtime-starttime)

    return output


def LoadTestRaw(inputPath=TestRawPath, verbose=False):    
    
    if (verbose==True):
        starttime = datetime.now()
        print(starttime)
    
    # save memory
    TestRawColumnNames = ['MachineIdentifier', 'ProductName', 'EngineVersion', 'AppVersion', 'AvSigVersion', 'IsBeta', 'RtpStateBitfield', 'IsSxsPassiveMode', 'DefaultBrowsersIdentifier', 'AVProductStatesIdentifier', 'AVProductsInstalled', 'AVProductsEnabled', 'HasTpm', 'CountryIdentifier', 'CityIdentifier', 'OrganizationIdentifier', 'GeoNameIdentifier', 'LocaleEnglishNameIdentifier', 'Platform', 'Processor', 'OsVer', 'OsBuild', 'OsSuite', 'OsPlatformSubRelease', 'OsBuildLab', 'SkuEdition', 'IsProtected', 'AutoSampleOptIn', 'PuaMode', 'SMode', 'IeVerIdentifier', 'SmartScreen', 'Firewall', 'UacLuaenable', 'Census_MDC2FormFactor', 'Census_DeviceFamily', 'Census_OEMNameIdentifier', 'Census_OEMModelIdentifier', 'Census_ProcessorCoreCount', 'Census_ProcessorManufacturerIdentifier', 'Census_ProcessorModelIdentifier', 'Census_ProcessorClass', 'Census_PrimaryDiskTotalCapacity', 'Census_PrimaryDiskTypeName', 'Census_SystemVolumeTotalCapacity', 'Census_HasOpticalDiskDrive', 'Census_TotalPhysicalRAM', 'Census_ChassisTypeName', 'Census_InternalPrimaryDiagonalDisplaySizeInInches', 'Census_InternalPrimaryDisplayResolutionHorizontal', 'Census_InternalPrimaryDisplayResolutionVertical', 'Census_PowerPlatformRoleName', 'Census_InternalBatteryType', 'Census_InternalBatteryNumberOfCharges', 'Census_OSVersion', 'Census_OSArchitecture', 'Census_OSBranch', 'Census_OSBuildNumber', 'Census_OSBuildRevision', 'Census_OSEdition', 'Census_OSSkuName', 'Census_OSInstallTypeName', 'Census_OSInstallLanguageIdentifier', 'Census_OSUILocaleIdentifier', 'Census_OSWUAutoUpdateOptionsName', 'Census_IsPortableOperatingSystem', 'Census_GenuineStateName', 'Census_ActivationChannel', 'Census_IsFlightingInternal', 'Census_IsFlightsDisabled', 'Census_FlightRing', 'Census_ThresholdOptIn', 'Census_FirmwareManufacturerIdentifier', 'Census_FirmwareVersionIdentifier', 'Census_IsSecureBootEnabled', 'Census_IsWIMBootEnabled', 'Census_IsVirtualDevice', 'Census_IsTouchEnabled', 'Census_IsPenCapable', 'Census_IsAlwaysOnAlwaysConnectedCapable', 'Wdft_IsGamer', 'Wdft_RegionIdentifier']
    TestRawColumnTypes = ['U', 'U', 'U', 'U', 'U', 'int8','float16','float32','float16','float16','float16','float16','int8','int16','float32','float16','float16','int16','O','O','O','int16','int16','O','O','O','float16','int8','O','float16','float16','O','float16','float32','O','O','float16','float32','float16','float16','float16','U','float32','O','float32','int8','float32','O','float16','float16','float16','O','O','float32','O','O','O','int16','int32','O','O','O','float16','int16','O','int8','O','O','float16','float16','O','float16','float16','float32','int8','float16','float16','int8','int8','float16','float16','float16']
    
    output = pd.read_csv(inputPath, header=0, dtype=dict(zip(TestRawColumnNames, TestRawColumnTypes)))
    
    if (verbose==True):
        endtime = datetime.now()
        print(starttime)
        print(endtime-starttime)

    return output
trainRaw  = LoadTrainRaw(verbose=True)



trainRaw.info()
#dispose when no longer needed
del trainRaw
gc.collect()
testRaw = LoadTestRaw(verbose=True)

testRaw.info()
#testRaw.head().iloc[:, [1, -1]]
#dispose when no longer needed
del testRaw
gc.collect()